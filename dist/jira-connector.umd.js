!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).JiraClient=e()}(this,(function(){"use strict";var t=function(t){this.jiraClient=t,this.currentUser=function(t){var e={uri:this.jiraClient.buildAuthURL("/session"),method:"GET"};return this.jiraClient.makeRequest(e,t)}};var e=function(t){this.jiraClient=t,this.getSprintsForBoard=function(t,e){let i={uri:this.jiraClient.buildAgileURL("/board/"+t.boardId+"/sprint")},s={};return t.startAt&&(s.startAt=t.startAt),t.maxResults&&(s.maxResults=t.maxResults),t.state&&(s.state=t.state),i.qs=s,this.jiraClient.makeRequest(i,e)},this.getAllSprintsForBoard=async function(t,e,i=null){null!=i&&i||(i=[]);let s=await this.getSprintsForBoard(t);const{values:n,maxResults:r,startAt:o,isLast:u}=s;if(i.push(...n),u)return i;{let s=o+r;return t.startAt=s,t.maxResults=r,this.getAllSprintsForBoard(t,e,i)}}};var i=function(t){this.jiraClient=t,this.detail=function(t,e){const{qs:i}=t;let s={uri:this.jiraClient.buildDevURL("/issue/detail"),method:"GET",headers:{"Content-Type":"application/json"},qs:i};return this.jiraClient.makeRequest(s,e)}};var s="Missing Issue ID or Key",n=function(t){this.jiraClient=t,this.createIssue=function(t,e){var i={uri:this.jiraClient.buildURL("/issue"),method:"POST",body:t,headers:{Accept:"application/json","Content-Type":"application/json"}};return this.jiraClient.makeRequest(i,e)},this.getCreateMetadata=function(t,e){var i={uri:this.jiraClient.buildURL("/issue/createmeta"),method:"GET",qs:t};return this.jiraClient.makeRequest(i,e)},this.getIssue=function(t,e){if(t.agile){var i="/issue/"+(t.issueId||t.issueKey);s={uri:this.jiraClient.buildAgileURL(i),method:"GET",qs:t.qs}}else var s=this.buildRequestOptions(t,"","GET");return this.jiraClient.makeRequest(s,e)},this.editIssue=function(t,e){var i={uri:this.jiraClient.buildURL("/issue/"+(t.issueId||t.issueKey)),method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:t.issue||t.body};return this.jiraClient.makeRequest(i,e,"Issue Updated")},this.getTransitions=function(t,e){var i=this.buildRequestOptions(t,"/transitions","GET",null,{transitionId:t.transitionId});return this.jiraClient.makeRequest(i,e)},this.transitionIssue=function(t,e){var i;return i=t.transition.transition?this.buildRequestOptions(t,"/transitions","POST",t.transition):this.buildRequestOptions(t,"/transitions","POST",t),this.jiraClient.makeRequest(i,e,"Issue Transitioned")},this.getWorkLogs=function(t,e){var i=this.buildRequestOptions(t,"/worklog","GET");return this.jiraClient.makeRequest(i,e)},this.getAllWorkLogs=function(t,e,i=null){return null!=i&&i||(i=[]),this.getWorkLogs(t).then(s=>{const{worklogs:n,startAt:r,maxResults:o,total:u}=s;i.push(...n);let a=r+o;return a<u?(t.startAt=a,t.maxResults=o,this.getAllWorkLogs(t,e,i)):i})},this.getWorkLog=function(t,e){var i={uri:this.jiraClient.buildURL("/issue/"+(t.issueId||t.issueKey)+"/worklog/"+(t.id||t.worklogId)),method:"GET",qs:{expand:t.expand}};return this.jiraClient.makeRequest(i,e)},this.buildRequestOptions=function(t,e,i,n,r){if(!t.issueId&&!t.issueKey)throw new Error(s);var o="/issue/"+(t.issueId||t.issueKey);t.fields&&(r.fields="",t.fields.forEach((function(t){r.fields+=t+","}))),t.expand&&(r.expand="",t.expand.forEach((function(t){r.expand+=t+","}))),t.properties&&(r.properties="",t.properties.forEach((function(t){r.properties+=t+","})));let u={uri:this.jiraClient.buildURL(o+e),method:i};return r&&(u.qs=r),n&&"GET"!=i&&"PUT"!=i&&(r.body=n),u}};var r=function(t){this.jiraClient=t,this.getAllPriorities=function(t,e){var i={uri:this.jiraClient.buildURL("/priority"),method:"GET"};return this.jiraClient.makeRequest(i,e)},this.getPriority=function(t,e){var i={uri:this.jiraClient.buildURL("/priority/"+t.priorityId),method:"GET"};return this.jiraClient.makeRequest(i,e)}};var o=function(t){this.jiraClient=t,this.getAllProjects=function(t,e){t=t||{};var i={uri:this.jiraClient.buildURL("/project",t.apiVersion),method:"GET",followAllRedirects:!0,json:!0,qs:{expand:t.expand,recent:t.recent,properties:t.properties&&t.properties.join(",")}};return this.jiraClient.makeRequest(i,e)},this.getProjectProperties=function(t,e){var i=this.buildRequestOptions(t,"/properties","GET");return this.jiraClient.makeRequest(i,e)},this.getProject=function(t,e){var i=this.buildRequestOptions(t,"","GET");return this.jiraClient.makeRequest(i,e)},this.getComponents=function(t,e){var i=this.buildRequestOptions(t,"/components","GET");return this.jiraClient.makeRequest(i,e)},this.getStatuses=function(t,e){var i=this.buildRequestOptions(t,"/statuses","GET");return this.jiraClient.makeRequest(i,e)},this.getVersions=function(t,e){var i=this.buildRequestOptions(t,"/versions","GET");return this.jiraClient.makeRequest(i,e)},this.buildRequestOptions=function(t,e,i,s,n){var r=(t=t||{}).projectIdOrKey?"/project/"+t.projectIdOrKey:"/project";t.fields&&(n.fields="",t.fields.forEach((function(t){n.fields+=t+","})),n.fields=n.fields.slice(0,-1)),t.expand&&(n.expand="",t.expand.forEach((function(t){n.expand+=t+","})),n.expand=n.expand.slice(0,-1));let o={uri:this.jiraClient.buildURL(r+e),method:i};return n&&(o.qs=n),s&&"GET"!=i&&"PUT"!=i&&(n.body=s),o}};var u=function(t){this.jiraClient=t,this.search=function(t,e){let i={uri:this.jiraClient.buildURL("/search"),method:t.method,headers:{"Content-Type":"application/json"}},s=("POST"==t.method?t.fields:t.fields&&t.fields.join(","),"POST"==t.method?t.expand:t.expand&&t.expand.join(","),"POST"==t.method?t.properties:t.properties&&i.properties.join(","),{jql:t.jql});return t.startAt&&(s.startAt=t.startAt),t.maxResults&&(s.maxResults=t.maxResults),t.fields&&(s.fields=t.fields),t.expand&&(s.expand=t.expand),"POST"==t.method?i.body=s:i.qs=s,this.jiraClient.makeRequest(i,e)},this.searchAll=async function(t,e,i,s,n=null){null!=n&&n||(n=[]);let r=await this.search(t),{issues:o=[],startAt:u,maxResults:a,total:h}=r;s&&"function"==typeof s&&(o=o.filter(t=>s(t))),i&&"function"==typeof i&&(o=o.map(t=>i(t))),n.push(...o),e&&e(u+a,h);let l=u+a;return l<h?(t.startAt=l,t.maxResults=a,this.searchAll(t,e,i,s,n)):n}};var a=function(t){this.jiraClient=t,this.moveSprintIssues=function(t,e){const{sprintId:i,body:s}=t;let n={uri:this.jiraClient.buildAgileURL("/sprint/"+i+"/issue"),method:"POST",headers:{"Content-Type":"application/json"},body:s};return this.jiraClient.makeRequest(n,e)}};var h=function(t){this.jiraClient=t,this.getUser=function(t,e){var i={uri:this.jiraClient.buildURL("/user"),method:"GET",qs:t.qs};return t.expand&&(i.qs.expand="",t.expand.forEach((function(t){i.qs.expand+=t+","}))),this.jiraClient.makeRequest(i,e)}};var l=function(t){this.jiraClient=t,this.testExecutions=function(t,e){let i={uri:this.jiraClient.buildRavenURL(`/test/${t.issueId||t.issueKey}/testrun`),method:"GET",qs:t.qs?t.qs:""};return this.jiraClient.makeRequest(i,e)},this.allTestExecutions=async function(t,e,i){null!=i&&i||(i=[]);let s=await this.testExecutions(t);const{entries:n,iDisplayLength:r,iDisplayStart:o=0,iTotalRecords:u}=s;return i.push(...n),o+r>=u?i:(t.qs||(t.qs={}),t.qs.bSsaveEntries=!0,t.qs.iDisplayStart=(o||0)+r,t.qs.iDisplayLength=r,this.allTestExecutions(t,e,i))},this.testruns=function(t,e){let i={uri:this.jiraClient.buildRavenURL("/testruns"),method:"GET",qs:t.qs?t.qs:""};return this.jiraClient.makeRequest(i,e)},this.getAllTestRuns=async function(t,e,i){null!=i&&i||(i=[]);try{let s=await this.testruns(t);return i.push(...s),t.qs.page=t.qs.page+1,this.getAllTestRuns(t,e,i)}catch(t){return console.log(t),i}},this.allTestRuns=async function(t,e){try{return await this.testruns(t,e)}catch(i){return t.qs||(t.qs={}),t.qs.page||(t.qs.page=1),this.getAllTestRuns(t,e)}},this.associateTestToTestPlan=async function(t,e){const i={uri:this.jiraClient.buildRavenURL(`/test/${t.issueId||t.issueKey}/testplans`),method:"POST",headers:{"Content-Type":"application/json"},body:t.body?t.body:null};return this.jiraClient.makeRequest(i,e)}};return function(t,e){return t(e={exports:{}},e.exports),e.exports}((function(s){const p=s.exports=function(s){if(!s.host)throw new Error(errorStrings.NO_HOST_ERROR);this.host=s.host,this.timeout=s.timeout,this.protocol=s.protocol?s.protocol:"https",this.path_prefix=s.path_prefix?s.path_prefix:"/",this.port=s.port,this.apiVersion=2,this.agileApiVersion="1.0",this.authApiVersion="1",this.webhookApiVersion="1.0",this.hungerApiVersion="1.0",this.devApiVersion="1.0",this.ravenApiVersion="1.0",this.promise=s.promise||Promise,this.requestLib=s.requestLib,this.auth=new t(this),this.board=new e(this),this.dev=new i(this),this.issue=new n(this),this.priority=new r(this),this.project=new o(this),this.search=new u(this),this.sprint=new a(this),this.user=new h(this),this.xray=new l(this)};(function(){this.buildURL=function(t,e){const i=this.path_prefix+"rest/api/"+(e||this.apiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.buildAgileURL=function(t,e){const i=this.path_prefix+"rest/agile/"+(e||this.agileApiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.buildAuthURL=function(t,e){const i=this.path_prefix+"rest/auth/"+(e||this.authApiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.buildHungerURL=function(t,e){const i=this.path_prefix+"rest/hunger/"+(e||this.hungerApiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.buildDevURL=function(t,e){const i=this.path_prefix+"rest/dev-status/"+(e||this.devApiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.buildRavenURL=function(t,e){const i=this.path_prefix+"rest/raven/"+(e||this.ravenApiVersion)+t,{protocol:s,host:n}=this;return decodeURIComponent(`${s}://${n}${i}`)},this.makeRequest=function(t,e){if(this.requestLib)return this.requestLib(t,e);const{method:i}=t;let s={method:i};if(t.headers&&(s.headers=t.headers),t.qs){let e=Object.keys(t.qs).map(e=>encodeURIComponent(e)+"="+encodeURIComponent(t.qs[e])).join("&");t.uri=`${t.uri}?${e}`}t.body&&(s.body=JSON.stringify(t.body));const{uri:n,parser:r}=t;return e?fetch(n,s).then(t=>r?r(t):t.json()).then(t=>e(null,t)).catch(t=>e(t)):fetch(n,s).then(t=>r?r(t):t.json()).then(t=>Promise.resolve(t)).catch(t=>Promise.reject(t))}}).call(p.prototype)}))}));
